platform: linux
image_resource:
  type: docker-image
  source:
    repository: gcr.io/google.com/cloudsdktool/cloud-sdk
    tag: slim
inputs:
  - name: eq-questionnaire-runner
  - name: image-tag
    optional: true
params:
  SERVICE_ACCOUNT_JSON: ((gcp.service_account_json))
  PROJECT_ID:
  DOCKER_REGISTRY:
  IMAGE_TAG:
  REGION:

  CONCURRENCY:
  MIN_INSTANCES:
  MAX_INSTANCES:
  CPU:
  MEMORY:

  WEB_SERVER_TYPE:
  WEB_SERVER_WORKERS:
  WEB_SERVER_THREADS:
  WEB_SERVER_UWSGI_ASYNC_CORES:
  HTTP_KEEP_ALIVE:

  DATASTORE_USE_GRPC:
  EQ_STORAGE_BACKEND:
  EQ_ENABLE_SECURE_SESSION_COOKIE:
  EQ_RABBITMQ_ENABLED:
  EQ_ENABLE_HTML_MINIFY:
  EQ_RABBITMQ_HOST:
  EQ_RABBITMQ_HOST_SECONDARY:
  EQ_QUESTIONNAIRE_STATE_TABLE_NAME:
  EQ_SESSION_TABLE_NAME:
  EQ_USED_JTI_CLAIM_TABLE_NAME:
  EQ_SUBMISSION_BACKEND:
  EQ_FEEDBACK_BACKEND:
  EQ_PUBLISHER_BACKEND:
  EQ_SUBMISSION_CONFIRMATION_BACKEND:
  EQ_FULFILMENT_TOPIC_ID:
  EQ_INDIVIDUAL_RESPONSE_LIMIT:
  EQ_INDIVIDUAL_RESPONSE_POSTAL_DEADLINE:
  EQ_FEEDBACK_LIMIT:
  CDN_URL:
  CDN_ASSETS_PATH:
  ADDRESS_LOOKUP_API_URL:
  ADDRESS_LOOKUP_API_AUTH_ENABLED:
  ADDRESS_LOOKUP_API_AUTH_TOKEN_LEEWAY_IN_SECONDS:
  NEW_RELIC_ENABLED:
  CONFIRMATION_EMAIL_LIMIT:
  GOOGLE_TAG_MANAGER_ID:
  GOOGLE_TAG_MANAGER_AUTH:
  NEW_RELIC_LICENSE_KEY:
  NEW_RELIC_APP_NAME:
  CLOUD_ARMOR_POLICY_NAME:
  VIEW_SUBMITTED_RESPONSE_EXPIRATION_IN_SECONDS:

run:
  path: bash
  args:
    - -exc
    - |
      export GOOGLE_APPLICATION_CREDENTIALS=/root/gcloud-service-key.json
      cat >$GOOGLE_APPLICATION_CREDENTIALS <<EOL
      $SERVICE_ACCOUNT_JSON
      EOL
      gcloud auth activate-service-account --key-file "${GOOGLE_APPLICATION_CREDENTIALS}"
      FILE=./image-tag/tag
      if [[ -f "${FILE}" ]]; then
        export IMAGE_TAG=`cat "$FILE"`
      fi
      cd eq-questionnaire-runner
      ./ci/deploy_app.sh
